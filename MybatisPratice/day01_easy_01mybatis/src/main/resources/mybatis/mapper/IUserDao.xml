<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jialei.easymybatis.dao.IUserDao">

    <resultMap id="userMap" type="com.jialei.easymybatis.dataobject.User">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <result property="address" column="address"></result>
        <collection property="accounts" ofType="com.jialei.easymybatis.dataobject.Account">
            <id property="id" column="aid"></id>
            <result property="uid" column="uid"></result>
            <result property="money" column="money"></result>
        </collection>
    </resultMap>

    <select id="findAll" resultType="com.jialei.easymybatis.dataobject.User">
        SELECT * from user;
    </select>

    <insert id="saveUser" parameterType="com.jialei.easymybatis.dataobject.User">
        insert into user(username, address, sex, birthday) values (#{username}, #{address}, #{sex}, #{birthday})
    </insert>

    <insert id="saveUser2" parameterType="com.jialei.easymybatis.dataobject.User">
        <selectKey keyProperty="id" order="AFTER" resultType="Integer">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values (#{username}, #{address}, #{sex}, #{birthday});
    </insert>

    <update id="updateUser" parameterType="com.jialei.easymybatis.dataobject.User">
        update user set username=#{username}, address=#{address}, sex=#{sex}, birthday=#{birthday} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{uid}
    </delete>
    
    <select id="findById" parameterType="Integer" resultType="com.jialei.easymybatis.dataobject.User">
        select * from user where id=#{uid};
    </select>

    <select id="findByName" parameterType="String" resultType="com.jialei.easymybatis.dataobject.User">
        select * from user where username like #{username};
    </select>

    <select id="findTotal" resultType="Integer">
        select count(id) from user;
    </select>


    <select id="findByQueryVO" parameterType="com.jialei.easymybatis.VO.QueryVO" resultType="com.jialei.easymybatis.dataobject.User">
        select * from user where username=#{user.username};
    </select>

    <!-- 处理动态查询语句 -->
    <select id="findByCondition" parameterType="com.jialei.easymybatis.dataobject.User" resultType="com.jialei.easymybatis.dataobject.User">
        select * from user where 1=1
        <if test="username != null">
            and username=#{username}
        </if>
    </select>

    <select id="findByCondition1" parameterType="com.jialei.easymybatis.dataobject.User" resultType="com.jialei.easymybatis.dataobject.User">
        select * from user
        <where>
            <if test="username != null">
                and username=#{username}
            </if>
            <if test="sex != null">
                and sex=#{sex}
            </if>
        </where>

    </select>


    <select id="findByIds" parameterType="com.jialei.easymybatis.VO.QueryVO" resultType="com.jialei.easymybatis.dataobject.User">
        select * from user
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in '(" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>

    <!-- 处理关联表的查询 -->
    <select id="findAllUserAccount" resultMap="userMap">
        select u.*, a.id as aid, a.uid, a.money from user u left join account a on u.id = a.uid
    </select>
</mapper>